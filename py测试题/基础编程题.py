#输入：无
#输出："加多宝"
import random 
random.speed(1)
listC = ['加多宝','雪碧','可乐','勇闯天涯','椰子汁']
print(random.choice(listC))

#输入：无
#输出："['水煮干丝','平桥豆腐','白灼虾','香菇青菜','西红柿鸡蛋汤']"
listA = ['水煮干丝','平桥豆腐','白灼虾','香菇青菜','西红柿鸡蛋汤']
listA.append."红烧肉")
listA.remove ("水煮干丝")
print(listA)

#输入：无
#输出："123"
dictMenu = {'卡布奇洛':32,'摩卡':30,'抹茶蛋糕':28,'布朗尼':26}
sum = 0
for i in dictMenu.values():
    sum += i
print(sum)

#输入："986"
#输出："689"
N = input()
print(N[::-1])

#给定一个数字 123456，请采用宽度为 25、右对齐方式打印输出，使用加号“+”填充。
#输入：无
#输出："+++++123456"
print("{:+>25}".format(123546))

#给定一个数字 12345678.9，请增加千位分隔符号，设置宽度为 30、右对齐方式打印输出，使用空格填充。
print("{:>30,}".format(12345678.9))

#给定一个整数数字 0x1010，请依次输出 Python 语言中十六进制、十进制、八进制和二进制表示形式，使用英文逗号分隔。
#输出："0x1010,4112,0o10020,......"
print("0x{0:x},{0:d},0o{0:o},0b{0:b}".format(0x1010))

N = input()
print(N.lower())

#获得用户输入的一个字符串，输出其中字母 a 的出现次数。
s = input()
print(s.count("a"))

#获得用户输入的一个字符串，替换其中出现的字符串"py"为"python"，输出替换后的字符串 。
s = input()
print(s.replace("py","python"))

#获得用户输入的一组数字，采用逗号分隔，输出其中的最大值。
s = input()
s = s.split(",")
x = []
for i in s :
    x.append(int(i))
print(max(x))

#s="9e10"是一个浮点数形式字符串，即包含小数点或采用科学计数法形式表示的字符串。‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬
#编写程序判断 s 是否是浮点数形式字符串。如果是则输出 True，否则输出 False。
s = "9e10"
if type(eval(s)) == type(1.1):
    print("True")
else:
    print("False")

#s="123"是一个整数形式字符串，编写程序判断 s 是否是整数形式字符串。如果是则输出 True，否则输出 False。要求代码不超过 2 行。
s ="123"
if type(eval(s)) == type(int(123)):
    print("True")
else:
    print("False")

#输入：无
#输出："123"
ls = [123, "456", 789, "123", 456, "789"]
s = 0
for item in ls:
    if type(item) == type(123)
        s += item
print(s)

#请编写程序利用这个死循环完成如下功能：循环获得用户输入，直至用户输入字符 y 或 Y 为止，并退出程序。
while True: 
    s = input()
    if s in ("y","Y"):
        break

#请编写一个史上最佛系的程序，获得用户输入时无提示，获得用户输入后计算 100 除以输入值，结果运算正常就输出结果，并退出，永远不报错退出。
while true:
    try:
        a = input()
        print(100/eval(a))
        break
    except:
        ""

#如下函数返回两个数的平方和，请补充横线处代码‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬。
def psum(a,b)
    return a**2 + b**2

a = eval(input())
b = eval(input())

print(psum(a,b))

#如下函数返回两个数的平方和，如果只给一个变量，则另一个变量的默认值为整数 10，请补充横线处代码。
def psum(a,b=10):
    return a**2 + b**2

N = eval(input())
print(psum(N))

#如下函数同时返回两个数的平方和以及两个数的和，如果只给一个变量，则另一个变量的默认值为整数 10，请补充横线处代码。
def psum(a,b=10)
    return (a**2 + b**2),(a+b)

a = eval(input())
print(psum(a))

#请补充横线处代码，实现 psum 函数返回两个数的平方和与 n 的乘积。
n = 2 
def psum(a,b)
    global n 
    return(a**2 + b**2)*n
a = eval(input())
b = eval(input())
print(psum(a,b))

#PyInstaller 库用来对 Python 源程序进行打包。给定一个源文件 py.py，请给出将其打包成一个可执行文件的命令。
pyinstaller -F py.py

#PyInstaller 库用来对 Python 源程序进行打包。给定一个源文件 py.py 和一个图标文件 py.ico，请利用这两个文件进行打包，生成一个可执行文件。
pyinstaller -I py.ico -F py.py

#txt 表示一段中文文本，请补充代码，输出该文本所有可能的分词结果。\
import jieba
txt = "中华人民共和国教育部考试中心委托专家制定了全国计算机等级考试二级程序设计考试大纲"
ls = jieba.lcut(txt,cut_all = True)
print(ls)

#打开一个文件 a.txt，如果该文件不存在则创建，存在则产生异常并报警。请补充如下代码。
try:
    f = open("a.txt","x")
except:
    print("文件存在,请小心读取!")

#请补充如下代码，在数字 789 后增加一个字符串 "012"。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
ls = [123, "456", 789, "123", 456, "789"]
ls.insert(3,"012")
pirnt(ls)

#请补充如下代码，使用 remove() 方法，采用一行语句，删除数字 789
ls = [123, "456", 789, "123", 456, "789"]
ls.remove(789)
print(ls)

#请补充如下代码，将列表 ls 逆序打印
ls = [123, "456", 789, "123", 456, "789"]
ls.reverse()
print(ls)

#请补充如下代码，将列表 ls 中第一次出现 789 位置的序号打印出来。注意，不要直接输出序号，采用列表操作方法。
ls = [123, "456", 789, "123", 456, "789"]
print(ls.index(789))

#请补充如下代码，将字典 d 中所有值以列表形式输出
d = {123:"123", 456:"456", 789:"789"}
print(list(d.values()))
#请补充如下代码，将字典 d 中所有键以列表形式输出
print(list(d.keys()))

#从键盘输入一个汉字，在屏幕上显示输出该汉字的 Unicode 编码值，请完善代码。
s = input()
print("\"{}\"汉字的Unicode编码:{}".format(s,ord(s)))

#从键盘输入两个数（换行），调用函数 gcd() 输出两个数的最大公约数显示在屏幕上。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬请完善代码。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬
def gcd(x,y):
    if x < y:
        x,y = y,x
    while x % y !=0:
        r = x % y
        x = y 
        y = r
    return y 
a = eval(input(""))
b = eval(input(""))
gcdab = gcd(a,b)
print("{}与{}的最大公约数是{}".format(a,b,gcd(a,b)))

#从键盘输入一个列表，计算输出列表元素的平均值。请完善代码。
def mean(numlist):
    s = 0.0
    for num in numlist:
        s = s + num 
    return s/len(numlist)
ls = eval(input(""))
print("平均值:",mean(ls))

#从键盘输入 3 个数作为三角形的边长，在屏幕上显示输出由这 3 个边长构成三角形的面积（保留 2 位小数）。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬请完善代码。
a,b,c = eval(input())
p = (a+b+c)/2
area = pow(p * (p-a)*(p-b)*(p-c),0.5)
print("{:.2f}".format(area))

#将一个列表中所有的单词首字母转换成大写，请完善代码。
ls = eval(input())
for i in range(len(ls)):
        ls[i] = ls[i].capitalize()
print(ls)

#从键盘输入一个列表，计算输出列表元素的均方差。‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬‬请完善代码
def mean(numlist):
    s = 0.0
    for num in numlist:
        s = s + num
    return s/len(numlist)
def dev(numlist,mean):
    sdev = 0.0
    for num in numlist:
        sdev = sdev + (num - mean)**2
    return (sdev /(len(numlist)-1) )** 0.5
ls = eval(input(""))
print("均方差为：{:.2f}".format(dev(ls,mean(ls))))



#输入字符串，使用中文分词库输出精确模式的中文分词结果。请完善代码
import jieba
Tempstr = in input()
ls = jieba.lcut(Tempstr)
print(ls)

#若某自然数除它本身之外的所有因子之和等于该数，则称该数为完数。输出 1000 以内的完数。请完善代码。
for i in range(2,1001):
    s = i 
    for  j in range(1,j):
        if i%j == 0:
            s -= j 
    if s == 0:
        print(i)

#输入一个自然数 n，如果 n 为奇数，输出表达式 1+1/3+…+1/n 的值；如果 n 为偶数,输出表达式 1/2+1/4+…+1/n 的值；输出表达式结果保留 2 位小数。请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
def f(n):
    sum =0.0
    if n%2 == 1:
        for i in range(1,n+1,2):
            sum += 1/i
    else:
        for i in range(2,n+1,2):
            sum += 1/i
    return sum 
n = int(input())
print("{:.2f}".format(f(n)))

#输出字典 fruits 中键值最大的键值对。请完善代码。
fruits = {"apple":10,"mango":12,"durian":20,"banana":5}
m = 'apple'
for key in fruits.keys():
    if fruits[m] < fruits[key]:
        m = key
print('{}:{}'.format(m,fruits[m]))

#获得用户的输入当作填充符号，以 30 字符宽居中输出 PYTHON 字符串。请完善代码。
a = input("请输入填充符号:")
s = "PYTHON"
print("{0:{1}^30}".format(s,a))

#获得用户的输入当作宽度，以 * 作为填充符号右对齐输出 PYTHON 字符串。请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
w = input("请输入输出宽度:")
s = "PYTHON"
print("{0:*>{1})".format(s,w))

#获得用户的输入当作对齐模式，用户输入：左、右、中，分别表示左对齐、右对齐和居中对齐，以 * 作为填充符号，30字符宽度输出 PYTHON 字符串。请完善代码。
m = input("请输入对其模式")
s = "PYTHON"
if m == "右":
    m =">"
elif m == "中":
    m ="^"
else:
    m = "<"
print("{0:*{1}30".format(s,m))

#获得用户输入的一个数字，增加数字的千位分隔符，以 30 字符宽度居中输出。请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
n = input("请输入数字:")
print("{:^30,}".format(eval(n)))
#获得用户输入，无论输入内容多少，以 30 字符宽度居中输出其中最多前10个字符，如果不足 10 个字符，则全部输出。请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
n = input("请输入数字:")
print("{:^30.10}".format(s))
#获得用户输入的一个数字，以 30 字符宽度右对齐输出，保留小数点后 3 位。请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
n = input("请输入一个数字：")
print("{:>30.3f}".format(eval(n)))
#获得用户输入的一个整数，以 30 字符宽度居中输出其十六进制大写形式，大十六进制形式不包含前导符 0X。请完善代码。
n = input("请输入一个整数:")
print("{:^30x}".format(eval(n)))

#获得用户输入的一个字符串，统计中文字符的个数。基本中文字符的 Unicode 编码范围是：4E00~9FA5。请完善代码
s = input("请输入:")
count = 0
for c in s:
    if 0x4e00 <= ord(c) <= 0x9fa5:
        count += 1
print(count)
#获得用户输入的一个整数，一行输出以该整数作为 Unicode 开始并逐一递增的 10 个字符。请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
n = input("请输入一个整数:")
for i in range(10):
    print(chr(eval(n)+i),end="")
#获得用户输入的一个整数，一行输出以该整数作为 Unicode 开始并逐一递减的 10 个字符。请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
n = input("请输入一个整数:")
for i in range(10):
    print(chr(eval(n)-1),end= "")
#获得用户输入的一个字符串，输出每个字符对应的 Unicode 值，这些值一行输出，采用逗号分隔，最后没有逗号。请完善代码。
s = input("请输入一个字符串:")
ls = [] 
for c in s:
     ls.append(str(ord(c)))
print(",".join(ls))
#获得用户输入的一个字符串，去除字符串两侧出现的 a~z 共 26 个小写字母，并打印输出结果。请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
s = input("请输入一个字符串")
print(s.stirp("zxcvbnmasdfghjklqwertyuiop"))
#获得用户输入的一个字符串，将其中所有英文字符变成小写，并打印输出结果。请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
s = input("请输入一个字符串:")
print(s.lower())
#获得用户输入的一个中文字符串，将所有中文字符替换为其 Unicode 编码值小 3 的字符，并在一行内打印输出结果。请完善代码。
s = input("请输入一个中文字符串:")
for c in s: 
    print(chr(ord(c)-3),end="")

#获得用户输入的一个字符串，将字符串第一位移到最后一位，其他字符顺序左移 1 位，请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
s = input("请输入一个字符串:")
print(s[1:]+s[0])
#获得用户输入的一个字符串，将字符串逆序输出。请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
s = input("请输入一个字符串:")
print(s[::-1])
#获得用户输入的一个数字 N，计算并输出 2 的 N 次幂结果的后 10 位。请完善代码。
n = input("请输入一个整数：")‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
print(pow(2,eval(n),pow(10,10)))
#获得用户输入的一个数字 N，计算并输出 N 平方结果的长度。请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
n = input("请输入一个整数: ")
print(len(str(eval(n)**2)))
#获得用户输入的一个数字 N，计算并输出 1000/N 的结果，如果计算产生异常，要求用户重新输入数字 N。请完善代码。
while True:
    n = input("请输入一个整数:")
    try:
        print(1000/eval(n))
        break
    except:
        pass
#获得用户输入的一个数字，替换其中 0~9 为中文字符“〇一二三四五六七八九”，输出替换后结果。请完善代码。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬
n = input("请输入一个数字：")
s = "〇一二三四五六七八九"
for c in "0123456789":
    n = n.replace(c,s[eval(c)])
print(n)

